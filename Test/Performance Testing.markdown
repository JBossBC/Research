# Performance Testing

## Question

压力测试和负载测试有什么区别?

## Definition


观察系统在一个给定的环境和场景中的性能表现是否与预期标准一致,评判系统是否存在性能缺陷,并根据测试结果识别性能瓶颈，改善系统性能的完整的过程。


## Classify

+ 基准测试:单用户，发单次请求，产出基准性能数据
+ 负载测试:多用户，用户数渐增，持续同时发同一业务请求，产出最大TPS
+ 压力测试:多用户,资源使用饱和，持续同时发同一业务请求，产出系统瓶颈或使用极限
+ 混合场景测试:多用户,资源使用不饱和,持续同时发不同业务请求,验证系统稳定性。


## Target

### frontend

+ 响应时间:用户从客户端发送请求，并得到响应，以及展示出来的整个过程的时间。
+ 加载速度:通俗的理解为页面内容显示的快慢。
+ 电量:APP的耗电量。
+ 流量:APP所消耗的流量。

---

### 1.加载速度
  通俗的理解，可以将加载速度视为页面内容显示的快慢。拿Google搜索的例子来说,从用户输入搜索内容按下enter键,到看到搜索出来的内容，这个过程的快慢就是加载速度。假设选中一个内容点击，跳转到一个网页，网页的内容显示出来能让用户看见的过程，也是加载速度

早些年Amazon曾经做过一个统计:网页加载时间每延长1秒钟，一年将减少16亿美元的营收。

#### 改善方式

+ 减少HTTP重复请求:性能黄金法则(只有10%-20%的最终用户响应时间花在了下载HTML文档上,其余的80%-90%时间花在了下载页面中的所有组件上)因此，改善响应时间最简单的途径就是减少HTTP请求的数量，并且去除不必要的重复请求。(将没有用到的JS去掉)
+ 使用CDN:HTTP请求和响应的时间会受到离web服务器距离的影响。如果用户离应用程序的web服务器更近，那么多个HTTP请求的响应时间将缩短。
CDN(内容发布网络)是一组分布在多个不同地理位置的Web服务器,可以选择网络阶跃数最小的服务器，或者具有最短响应时间的服务器，用于更加有效地向用户发布网络。
+ 减少下载的资源:比如通过压缩图片的方式,减少图片的大小，缩短下载的时间。另外可以通过比对客户端与服务器差异的方式,快速展示本地的缓存资源,减少同样内容的重复下载。


### backend

+ 响应时间:接口从请求到响应返回的时间
+ 并发用户数:同一时间点请求服务器的用户数,支持的最大并发数。
+ 内存占用:APP的内存开销
+ 吞吐量(TPS):每秒事务数。在没有遇到性能瓶颈时:TPS-并发用户数*事务数/响应时间
+ 错误率:失败的事务数/事务总数
+ 资源使用率:CPU占用率、内存使用率、磁盘I/O、网络I/O。

#### 1.响应时间
响应时间指的是客户发出请求到得到响应的整个过程的时间。在某些过程中，请求响应时间通常会被称为TTLB(Time To laster byte),意思是从发起一个请求开始，到客户端收到最后一个字节的响应所消耗的时间。所以也可以理解为,响应时间=网络响应时间+应用程序响应时间。

因此在大部分公司的项目实际运作中，会把性能测试分为两部分，APP前端的响应时间、后端接口请求和返回的时间,即分别是系统级性能测试和接口级性能测试。

+ 网络传输时间: T1
+ 应用服务器处理时间:T2
+ 数据库服务器处理时间:T3

响应时间=T1+T2+T3

合理的响应时间:互联网对于用户响应时间，有一个普遍的标准,2-5-10原则
        
        1. 两秒之内得到响应会认为系统响应的很快
        2.  5秒之内得到响应，会认为系统响应的速度还不错
        3.  10秒之内得到响应，会认为系统性响应的速度很糟糕
        4.  超过10秒还未得到响应，会认为系统是没有响应的
      

