# Socket

## Question

监听socket和已连接socket的区别

----

要想客户端和服务器能在网络中通信，那必须得使用socket编程，它使进程间通信里比较特别的方式，特别之处在于它是可以跨主机间通信。

服务器首先调用socket()函数，创建网络协议为IPv4,以及传输协议为TCP的Socket，接着调用bind()函数，给这个Socket绑定一个IP地址和端口。

+ 绑定端口的目的:当内核收到TCP报文，通过TCP头里面的端口号，来找到我们的应用程序，然后把数据传递给我们。
+ 绑定IP地址的目的:一台机器是可以有多个网卡的，每个网卡都有对应的IP地址，当绑定一个网卡时,内核在收到该网卡上的包,才会发给我们。

绑定完IP地址和端口后,就可以调用listen()函数进行监听，此时对应TCP状态图中的listen,如果我们要判定服务器中一个网络程序有没有启动，可以通过netstat命令查看对应的端口号是否有被监听。

服务端进入了监听状态后，通过调用accept()函数，来从内核获取客户端的连接，如果没有客户端的连接，则会阻塞等待客户端连接到来。

客户端在创建好Socket后，通过connect()函数发起连接，该函数的参数要指明服务端的IP地址和端口号，然后TCP三次握手就开始了。

在TCP连接的过程中，服务器的内核实际上为每个Scoket维护了两个队列:

+ 一个是还没完全建立连接的队列，称为TCP半连接队列，这个队列都是没有完成三次握手的连接，此时服务端处于syn_rcvd的状态
+ 一个是已经建立连接的队列，称为TCP全连接队列，这个队列都是完成了三次握手的连接，此时服务端处于established状态

当TCP全连接队列不为空后，服务端的accept()函数，就会从内核中的TCP全连接队列里拿出一个已经完成连接的Socket返回应用程序，后续数据传输都用这个Socket。

注意:监听的socket和真正用来传数据的socket是两个:

+ 一个叫做监听socket
+ 一个叫做已连接socket

连接建立后，客户端和服务端就开始相互传输数据了，双方都可以通过read()和write()函数来读写数据

至此，TCP协议的socket程序的调用过程就结束了。