# The difference of MTU and MSS

## Question

拥塞控制的实现?

+ MTU

MTU(maximum transmit unit)最大传输单元，由数据链路层进行规范(数据链路层保证了比特流安全的传输)，缺省值为1500，此值根据在一般网络环境下对于传播时延和传播效率的优解。值过高可能会导致信道拥堵，值过低可能会导致数据真实传输效率低。

+ MSS

MSS(maximum segment size)最大报文长度:这是tcp对应用层数据大小的一种限制，存在于tcp数据报的options中.为什么tcp要设计MSS?这和tcp的拥塞控制有一定的联系，对于目前的端到端协议，假如客户端发送时的MTU小于传输路程中的某一台路由器，那么此台路由器的ip层会将数据报进行分片处理，这种情况会导致服务器接收到分片后的数据时间可能会有一定的时间差，这会导致服务器对数据包进行重组,影响末端系统的处理时间，在一定程度下会影响RTT的有效性，阻碍TCP对传输信道的拥塞控制判断。所以对于tcp协议来讲一般在端就将分片工作在网络层之前就做好。我们一般都将tcp中的MSS看作MTU的替代，为了防止在网络层进行分片操作，同时对于MSS本身来说，无异于赋予MTU灵活性，根据信道的实时情况来改变传输数据的长度。


一次连接中的MSS是如何产生的

   mss在一次连接中的设定决定于客户端与服务器，客户端在进行SYN握手的时候将自己的MSS发送过去，服务器在进行ACK SYN的时候将MSS发送过去。两台主机建立完连接后，根据最小优先原则设定MSS，但两台主机进行数据传输的时候途中还会经过路由器等转发设备，路由器的MSS可能会小于两台主机设定的MSS，对于在传输过程中如果路由器遇到MTU小于两端规定的MTU，那么**路由器会丢弃此数据报**，并且**返回一个ICMP包**，如图所示，ICMP中还会携带该路由器允许的MTU，这样主机就可以调整自己的MSS来达到避免分片。

怎么防止在传输过程中的分片?
网络层的数据包中的flag中的DF为1，也就是不允许分片，对于在传输过程中如果路由器遇到MTU小于两端规定的MTU，那么路由器会丢弃此数据报，并且返回一个ICMP包，如图所示，ICMP中还会携带该路由器允许的MTU，这样主机就可以调整自己
的MSS来达到避免分片
![](https://img-blog.csdnimg.cn/img_convert/0720da52cde591367dc7ec57eacadffd.png)

