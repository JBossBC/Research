# Vue

vue.js是一套构建用户界面的渐进式框架

vue只关注视图层，采用自底向上增量开发的设计

vue的目标是通过尽可能简单的API实现响应的数据绑定和组合的视图组件。

## vue.js模板语法

vue.js使用了基于HTML的模板语法,允许开发者声明式地将DOM绑定至底层的Vue实例的数据。

vue.js的核心是一个允许你采用简洁的模板语法来声明式的将数据渲染进DOM的系统。

结合响应系统，在应用状态改变时，Vue能够智能地计算出重新渲染组件地最小代价并应用到DOM操作上。

### 插值

 + 文本:数据绑定最常见地形式就是使用{{...}}的文本插值
 + HTML:使用v-html指令用于输出html代码
 + 属性:html属性中的值应使用v-bind指令
 + 表达式:vue.js都提供了完全的js表达式支持
 + 指令:指令是带有v-前缀的特殊属性。指令用于在表达式的值改变时，将某些行为应用到DOM上
 + 参数:参数在指令后以冒号指明。
 + 修饰符:修饰符是以半角句号.指明的特殊后缀，用于指出一个指令应该以特殊方式绑定。
 + 用户输入:在input输入框中我们可以使用v-model指令来实现双向数据绑定。v-model指令用来在input、select、textarea、checkbox、radio等表单控件元素上创建双向数据绑定,根据表单上的值,自动更新绑定的元素的值。按钮的事件我们可以用v-on监听事件，并对用户的输入进行响应
 + 过滤器:Vue.js允许你自定义过滤器，被用作一些常见文本的格式化，用管道符指示。

## vue.js条件语句

+ v-if
+ v-else
+ v-else-if
+ v-show:根据条件是否展示元素
