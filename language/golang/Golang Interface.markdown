# Golang Interface

在计算机科学中，接口是一个**共享边界，计算机系统的独立组件之间可以在该共享边界上交换信息**。信息交换可以在软件、硬件、外围设备、人员之间进行。那么为什么需要接口呢？

+ 接口可以隐藏细节

接口可以对对象进行必要的抽象，外接设备只要满足相应的标准，就可以与主设备对接，应用程序只要满足操作系统规定的系统调用方式，就可以使用操作系统提供的强大功能，而不必关注对方具体的实现细节。

+ 控制系统复杂性(没有感受到)

通过接口，我们能够以模块化的方式构建起复杂、庞大的系统。通过将复杂的功能拆分成彼此独立的模块，不仅有助于更好地并行开发系统、加速系统开发效率，也能在设计系统时以全局的视野看待整个系统。另外，模块拆分有助于快速排查、定位和解决问题

+ 权限控制

接口时系统与外界交流的唯一途径。如果外界不满足这种协议，就无法与指定的系统进行交流。因此系统可以通过接口控制接入方式和接入方行为，降低安全风险。

## Go语言中的接口

**编程语言中的接口具有不同的表现形式，类似于一种沟通的"共享边界"**

在面向对象的编程语言中，**接口指相互独立的两个对象之间的交流方式**.例如，在JAVA接口中，Comparable接口指定实现类必须实现compareTo方法。排序方法可以对实现Comparable接口的任何对象进行排序，而不必了解对象内部的任何细节。

Go语言采用一种不寻常的方法进行面向对象编程，在Go语言中可以为任何自定义的类型添加方法,而不仅仅是类。没有任何形式的基于类型的继承，取而代之的是使用接口来实现**扁平化、面向组合的设计模式**

在Go语言中，接口是一种特殊的类型，是其他类型可以实现的方法签名的集合。方法签名只包含方法名、输入参数和返回值。