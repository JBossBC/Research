# golang Stack

## Question

stack能否扩容，怎么扩容?
函数调用链形成？？函数的执行过程


每个线程都有一个被称为栈的内存区域，其遵守一种先进后出的形式，增长方向为从高地址到低地址

**当函数执行时，函数的参数、返回地址、局部变量会被压入栈中，当函数退出时，这些数据会被回收。当函数还没有退出就调用另一个函数时，形成一条函数调用链**

**每个函数在执行过程中都使用一块栈内存来保存返回地址、局部变量、函数参数等。我们称这一块区域为函数的栈帧**

当发生函数调用时，因为调用函数没有执行完毕，其栈内存中保存的数据还有用，所以被调用函数不能覆盖调用函数的栈帧，只能把被调用函数的栈帧压栈，等被调用函数执行完毕后再让栈帧出栈。这样，栈的大小就会随着函数调用层级的增加而扩大，随着函数的返回而缩小，也就是说，函数的调用层级越深，消耗的栈空间越大