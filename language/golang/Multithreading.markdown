#  Multithreading

## 多线程编程中的三个核心概念

+ 原子性

      这一点，跟数据库事务的原子性概念差不多，即一个操作(有可能包含多个子操作)要么同时执行，要么全部都不执行

+ 可见性**

       可见性是指，当多个线程并发访问共享变量时,一个线程对共享变量的修改，其他线程能够立即看到。可见性问题时很多人理解错误的一点。操作系统中缓存一致性协议对数据的几种状态保证了并发情况下数据的可见性
+ 有序性

       有序性是指程序执行的顺序按照代码的先后顺序执行。在代码体现时这样的，但是对于底层来说，可能会因为编译器优化或者更底层的优化导致指令重排或者其他优化措施导致了指令的未按顺序执行。虽然这个时候CPU并不会保证完全按照代码顺序执行，但是他会保证程序最终的执行结果和代码顺序执行时的结果一致。


多线程编程下导致线程不安全的原因其实根本在于对共享变量(临界资源的访问的非原子性导致的),这一点其实可以根本看出来，对于多线程执行来看，会分配线程执行栈,线程执行栈中在某一时间段保存的共享变量的副本可能为过时的,这是因为操作的非原子性导致的。