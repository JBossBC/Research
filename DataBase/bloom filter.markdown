# bloom filter

布隆过滤器实际上是一个很长的二进制向量和一系列随机映射函数。布隆过滤器可以用来检索一个元素是否在一个集合中。它的优点是空间效率和查询时间都比一般的算法要好得多，缺点是有一定的误识别率和删除困难。

可以把布隆过滤器理解为一个set集合，我们可以通过add往里面添加元素，通过contains来判断是否包含某个元素。

## bloom filter的优点

+ 时间复杂度低:增加和查询元素的时间复杂度为O(n),n为哈希函数的个数,通常情况比较小
+ 保密性强,布隆过滤器不存储元素本身
+ 存储空间小，如果允许存在一定的误判，布隆过滤器是非常节省空间的

## bloom filter的缺点

+ 有一定的误判率，但是可以通过调整参数来降低
+ 无法获取元素本身
+ 很难删除元素

## bloom filter的使用场景

bloom filter可以告诉我们"某样东西一定不存在或者可能存在，也就是说布隆过滤器说这个数不存在就一定不存在，布隆过滤器说这个数存在可能不存在"

+ 解决redis缓存穿透问题
+ 邮件过滤，使用布隆过滤器来做邮件黑名单过滤
+ 对爬虫网址进行过滤，爬过的不再爬
+ 解决新闻推荐过的不再推荐
+ 数据库中用于判断数据是否存在，可以减少数据库的IO请求


## bloom filter的原理

### 数据结构

bloom filter实际上是一个很长的二进制向量和一系列随机映射函数，以redis的布隆过滤器实现为例,redis的布隆过滤器底层是一个大型二进制数组+多个无偏hash函数


![](https://img-blog.csdnimg.cn/3803cdaf60db4ef8bcc539d836320683.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5omN5pS-5LiA6Iqx5aSp5Zyw6aaZ,size_20,color_FFFFFF,t_70,g_se,x_16)