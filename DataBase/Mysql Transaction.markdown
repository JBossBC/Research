# Mysql Transaction


## 事务的基本要素(ACID)

1. 原子性(Atomicity):事务开始后所有操作，，要么全部做完，要么全部不做，不可能停滞正中间环节。事务执行过程中出错，会回滚到事务开始前的状态，所有的操作都像没有发生一样。也就是说事务是一个不可分割的整体。
2. 一致性(Consistency):事务开始前和结束后，数据库的完整性约束没有被破坏，比如说A向B转账，不可能最后结果是A扣了钱，B没收到。
3. 隔离性(Isolation):同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如A正在从一张银行卡中取钱，在A取钱的过程结束钱,B不能向这张卡转账。
4. 持久性(Durability):事务完成后，事务对数据库的所有更新将被保存到数据库，不能回滚。


## 事务的并发问题

1. 脏读:事务A读取了事务B更新的数据，然后B回滚操作，那么A读取到的数据就是脏数据
2. 不可重复读:事务A多次读取同一数据，事务B在事务A多次读取的过程中，对数据作了更新并提交，导致事务A多次读取同一数据的时候，结果不一致。
3. 幻读:系统管理员A将数据库中所有学生的成绩从具体分数改为ABCDE等级，但是系统管理员B就在这个时候插入了一条具体分数的记录，当系统管理员A改结束后发现还有一条记录没有改过来，就像发生了幻觉一样，这就叫幻读

不可重复读侧重于修改，幻读侧重于新增或删除。解决不可重复读的问题只需要锁住满足条件的行，解决幻读需要锁表。

//脏读和不可重复读其实有点相似，都是其他事务对表中原有数据进行修改之后导致数据不一样。但是不可重复读要更复杂一点，因为当我们进行查询操作的时候，如果说其他事务对我们查询的表有所改动，如果我们只加上行锁便可以解决脏读的问题，也就是说我们不管在查询的时候？？？

## mysql事务隔离级别

![](https://img-blog.csdnimg.cn/4865fafc92504246be27c767a83f38ea.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAZnl5Z3JlZQ==,size_20,color_FFFFFF,t_70,g_se,x_16)


//InnoDB解决脏读的方案是:将改变的数据加上行锁，其他数据不能读取该数据修改后的数据，只返回该数据修改前的数据。???



## Transaction Persistence


mysql引入了redo log，buffer pool 内存写完了，然后会写一份redo log ，这份redo log 记载着这次在某个页上面做了什么修改。

即使Mysql在中途挂了，我们还可以根据redo log 来对数据进行恢复。


redo log是在磁盘中顺序写的，写入速度很快。并且它记录的是物理修改(xxxx页做了xxx修改)，文件的体积很小，恢复速度也很快。