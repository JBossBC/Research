# proxy

代理合约-一个作为代理的合约，将所有调用委托给它所代理的合约。在这里，它也会被称为存储层。

实现合约-你像升级或修补的合约。这是代理合约被代理的合约。在这种情况下，它也是逻辑层。

代理合约将执行或逻辑层的合约存储为一个状态变量。与普通合约不同的是，用户实际上并不直接向逻辑层发送调用--那是我们的原始合约。相反，所有的调用都有经过代理。这个代理将调用委托给这个逻辑层(它实在代理地址上存储的具体实现合约),并把从逻辑层收到的任何数据返回给调用者，或者对错误进行回退。


这里需要注意的关键是，代理通过delegatecall函数调用逻辑合约。因此，实际上是由代理合约来存储状态变量，即它是存储层。这就像你只是从执行合约（逻辑层！）借用逻辑，并在代理的上下文中执行，并影响代理合约在存储中的状态变量。


委托代码通常被放在代理的fallback函数中。


因此升级机制可以理解为：授权改变代理合约存储变量的实现合约地址，以指向整个新部署的、升级的实现合约。这样，升级就完成了。代理现在将调用委托给这个新合约。虽然那个旧合约会永远存在。

## 代理合约和实现合约之间的存储碰撞


我们不能简单地在代理合约中声明 address implementation，因为这会引起与实现合约的存储发生冲突，即与实现合约中的多个变量在存储槽中有重叠。

