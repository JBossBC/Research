# ETC


## data layer

与比特币区块相比，以太坊区块在结构上总体相似，也是由区块头和区块体两部分组成，但包含的信息更多，以太坊区块的区块体除了包含交易列表外，还包含一个特殊的叔区块头部分。


以太坊系统每个区块的整体数据结构如下

|字段|大小|描述|
|--|--|--|
|区块头|可变大小|区块头信息|
|交易列表|可变大小|区块中包含的交易数量|
|叔块头列表|可变大小|区块中包含的叔块头数据|

每个区块的区块头所包含字段信息的数据结构如下

|字段|大小|描述|
|--|--|--|
|父区块的哈希|32字节|前一个区块的哈希值|
|叔区块的哈希|32字节|当前区块所包含的所有叔区块头列表的哈希值|
|节点地址|20字节|生成该区块的节点地址，以太坊系统将向该地址支付出块奖励|
|状态数的根哈希|32字节|当前区块包含的所有交易的MPT状态树的根哈希值|
|交易树的根哈希|32字节|当前区块包含的所有交易的MPT交易树的根哈希值|
|收据树的根哈希|32字节|当前区块包含的所有交易的MPT收据树的根哈希值|
|Bloom过滤器|可变大小|交易收据日志Log组成的Bloom过滤器，用来快速判断一个参数Log对象是否存在于一组已知的log集合中|
|区块的难度|可变大小|当前区块的难度，区块的难度由父区块的Time和Difficulty计算得出，并会动态调整。从创世节点开始到该区块可以累计计算一个总难度值，在某个区块出现分叉的时候，以太坊会选择总难度值最大的那条链作为主链，不在该条链上的区块即为叔块。|
|区块序号|可变大小|当前区块的序号，从创世区块0号开始每个后续区块递增1|
|交易消耗的Gas上限|8字节|当前区块包含的所有交易可以使用的gas上限，**注意这个数值并不等于所有交易的GasLimit字段值之和**|
|交易使用的Gas之和|8字节|当前区块包含的所有交易已使用的Gas之和|
|时间戳|可变大小|当前区块产生的unix时间戳，一般是指打包区块的时间|
|区块的附加数据|可变大小|区块的附加信息|
|混合摘要|32字节|与Nonce的组合用于Pow工作量计算的哈希值，用区块头的数据与Nonce进行哈希计算得到，一般用于验证区块|
|随机数|8字节|区块产生时的随机数，竞争计算该区块时的Pow工作量证明问题求解答案|


