# virtual network equipment

以往的网卡、交换机、路由器，当前可以通过操作系统使用程序来进行模拟。

|物理设备|虚拟设备|
|--|--|
|网卡eth0|tun/tap|
|网卡|veth pair|
|交换机|linux bridge|
|路由器| linux netfilter|

tun用于收发第三层数据报文包，如IP包。因此用于点对点IP隧道，如OpenVPN、IPSec等。(linux kernel 2.1)

tap用于收发第二层数据报文包，如以太网帧。Tap最常见的用途就是做虚拟机的网卡。因为它与普通的物理网卡更加相近，所以也经常用作普通机器的虚拟网卡。(linux kernel 2.1)


tun/tap是一端连着网络协议栈，一端连着应用程序，使用tun/tap设备传输数据需要经过两层协议栈,不可避免的对性能有一定损耗。


veth是virtual ethernet的缩写，是成对的出现，用于让隔离的网络命名空间通信(linux kernel 2.6 开始支持net namespace隔离)。直接把veth比喻成网卡不太恰当，它应该相当于交叉网线连接的一对物理网卡。(交叉网线是指一头是T568A标准，另外一头是T568B标准的网线。直连网线则是两头采用同一种标准的网线。 网卡对网卡这样的同类设备需要使用交叉线序的网线来连接，网卡到交换机、路由器就采用直连线序的网线，不过现在的网卡大多带有线序翻转功能，直连线也可以网卡对网卡地连通了。)

linux bridge是linux kernel 2.2提供的二层转发工具。可以接入物理网卡，虚拟网卡(tun/tap veth),linux bridge的转发规则也与交换机相同。


    如果数据包是广播帧，转发给所有接入网桥的设备。
    如果数据包是单播帧：
    且MAC地址在地址转发表中不存在，则洪泛（Flooding）给所有接入网桥的设备，并将响应设备的接口与MAC地址学习（MAC Learning）到自己的MAC地址转发表中。
    且MAC地址在地址转发表中已存在，则直接转发到地址表中指定的设备。
    如果数据包是此前转发过的，又重新发回到此Bridge，说明冗余链路产生了环路。由于以太帧不像IP报文那样有TTL来约束，因此一旦出现环路，
    如果没有额外措施来处理的话就会永不停歇地转发下去。对于这种数据包就需要交换机实现生成树协议（Spanning Tree Protocol，STP）来交换拓扑信息，生成唯一拓扑链路以切断环路



Linux Bridge相比于物理交换机不同的一点是，普通交换机只会单纯地做二层转发，Linux Bridge有自身的IP地址，还支持把发给它自身的数据包接入到主机的三层的协议栈中。 比如docker network的命令，可以看到它会存在一个gateway的IP地址，这个IP地址可通过宿主机上网络协议栈来将请求进行跨主机转发。Linux内核成了一个天然的路由器 (多亏了Netfilter NAT/SNAT)


Linux主机独立承担了三层路由的职责，一定程度上扮演了路由器的角色。由于有Netfilter的存在，对网络层的路由转发， 就无须像Linux Bridge一样专门提供brctl这样的命令去创建一个虚拟设备，通过Netfilter很容易就能在Linux内核完成根据IP地址进行路由的功能， 你也可以理解为Linux Bridge是一个人工创建的虚拟交换机，而Linux内核则是一个天然的虚拟路由器。